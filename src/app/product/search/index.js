import ProductListing from "@/components/searchPage";
import { parseUrlWithQueryParams } from "@/helper/function";
import Layout from "@/layout";
import Head from "next/head";
import React from "react";
var Url = require('url-parse');

import { serverMethod } from "@/lib/network/http";
import { convertNumericKeysToObject, convertObject, transformKeysToObject } from "@/lib/helper";

const Search = (props) => {

  return (
    <Layout>
      <Head>
        <title>Search Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <ProductListing props={props} />
    </Layout>
  );
};

export default Search;



export const getServerSideProps = async (ctx) => {
const currParam ={
  method: "get"
}
const categories = await serverMethod("/public/categories", currParam);
const brands = await serverMethod("/public/brands", currParam);
const tags = await serverMethod("/public/tags", currParam);
  var url = new Url(ctx.resolvedUrl);
  const parsedObject = parseUrlWithQueryParams(`${url.query}`);

  const nwObject = convertObject(parsedObject)

  const params = {
    method: "get", query: {...parsedObject,filter:JSON.stringify(parsedObject.filter)}
  }
  const data = await serverMethod("/public/product/search", params);
  return {
    props: {
      categories,
      brands,data,tags
    },
  };
};
