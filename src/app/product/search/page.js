// import ProductListing from "@/components/searchPage";
// import { parseUrlWithQueryParams } from "@/helper/function";
// import Layout from "@/layout";
import { allProduct, attributes } from "@/assets/fakeData/Products";
import ProductCard from "@/components/elements/product/ProductCard";
import Layout from "@/components/global/layout/Layout";
import Head from "next/head";
import React from "react";
// var Url = require('url-parse');

// import { serverMethod } from "@/lib/network/http";
// import { convertNumericKeysToObject, convertObject, transformKeysToObject } from "@/lib/helper";

const Search = (props) => {

  return (
    <Layout>
      <Head>
        <title>Search Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {/* <ProductListing props={props} /> */}

<div className="bg-gray-50">
  <div className="mx-auto max-w-screen-2xl px-3 sm:px-10">
    <div className="flex py-10 lg:py-12">
      <div className="flex w-full">
        <div className="w-full">
        <div className="flex">
            <div className="w-full">
              <div className="grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-5 xl:grid-cols-5 2xl:grid-cols-6 gap-2 md:gap-3 lg:gap-3 ">
                {allProduct.map((data, index) => (
                  <ProductCard key={index} product={data} attributes={attributes} />
                ))}
              </div>
            </div>
          </div>
        </div>
      </div>

    </div>

  </div>
</div>

      
    </Layout>
  );
};

export default Search;



// export const getServerSideProps = async (ctx) => {
// const currParam ={
//   method: "get"
// }
// const categories = await serverMethod("/public/categories", currParam);
// const brands = await serverMethod("/public/brands", currParam);
// const tags = await serverMethod("/public/tags", currParam);
//   var url = new Url(ctx.resolvedUrl);
//   const parsedObject = parseUrlWithQueryParams(`${url.query}`);

//   const nwObject = convertObject(parsedObject)

//   const params = {
//     method: "get", query: {...parsedObject,filter:JSON.stringify(parsedObject.filter)}
//   }
//   const data = await serverMethod("/public/product/search", params);
//   return {
//     props: {
//       categories,
//       brands,data,tags
//     },
//   };
// };
