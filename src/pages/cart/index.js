import { ArrayData } from "@/assets/mock/product";
import CartItem from "@/components/elements/CartItem";
import CartRight from "@/components/elements/cartRight";
import Table from "@mui/material/Table";
import TableBody from "@mui/material/TableBody";
import TableCell from "@mui/material/TableCell";
import TableContainer from "@mui/material/TableContainer";
import TableHead from "@mui/material/TableHead";
import TableRow from "@mui/material/TableRow";

import Layout from "@/layout";
import {
  Add,
  AddCircleOutline,
  Close,
  Remove,
  RemoveCircleOutline,
} from "@mui/icons-material";
import {
  Box,
  Button,
  Container,
  Grid,
  IconButton,
  Paper,
  Stack,
  Typography,
  colors,
} from "@mui/material";
import Head from "next/head";
import Image from "next/image";
import { Fragment } from "react";
import { useDispatch, useSelector } from "react-redux";
import { CartUpdate } from "@/components/global/products/Cart";
import { removefromCart } from "@/store/cartReducer";

const CartPage = () => {
  const cartData = useSelector((state) => state["data"].cartItems);
  const wishlist = useSelector((state) => state["data"].wishList);
  return (
    <Fragment>
      <Head>
        <title>Cart Next Ecommerce</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <Container className="mt-5 min-h-screen">
          <Typography variant="h1" mb={5} className="!text-3xl">
          
            Your Cart
          </Typography>
          <Grid container direction={"row"} gap={5}>
            {cartData.length !== 0 ? (
              <>
              <Stack direction={"column"} gap={1.5} flex={2}>
                {/* {cartData?.map((item) => (
                  <CartItem key={item} data={item} />
                ))} */}
                <CartTable />
              </Stack>
              <Stack direction={"column"} gap={1} flex={0.9}>
              <CartRight />
            </Stack>
              </>
             
              
            ) : (
              <Stack direction={"column"} gap={1.5} flex={2}>
                <div className="h-40 flex items-center justify-center font-medium text-xl">
                  {" "}
                  Cart is empty
                </div>
              </Stack>
            )}
           
          </Grid>
        </Container>
      </Layout>
    </Fragment>
  );
};

export default CartPage;

const CartTable = (second) => {
  const wishlist = useSelector((state) => state["data"].wishList);
  const cartData = useSelector((state) => state["data"].cartItems);

  const dispatch = useDispatch();

  return (
    <TableContainer component={Paper}>
      {cartData.length != 0 ? (
        <Table sx={{ minWidth: 650 }} aria-label="simple table">
          <TableHead>
            <TableRow>
              <TableCell></TableCell>
              <TableCell align="left">Product</TableCell>
              <TableCell align="left">Price</TableCell>
              <TableCell align="left">Quentity</TableCell>
              <TableCell align="right">Sub Total</TableCell>
            </TableRow>
          </TableHead>
          <TableBody>
            {cartData.map((row) => (
              <TableRow
                key={row.title}
                sx={{ "&:last-child td, &:last-child th": { border: 0 } }}
              >
                <TableCell align="left">
                  <IconButton
                    onClick={() => dispatch(removefromCart(row["id"]))}
                    color="error"
                  >
                    <Close></Close>
                  </IconButton>
                </TableCell>
                <TableCell align="left">{row.title}</TableCell>
                <TableCell align="left">{row.price}</TableCell>

                <TableCell align="left">
                  <CartUpdate data={row} />
                </TableCell>
                <TableCell align="right">{row.subtotal}</TableCell>
              </TableRow>
            ))}
          </TableBody>
        </Table>
      ) : (
        <div className="h-40 flex items-center justify-center font-medium text-xl">
          {" "}
          No Item Has been add to Cart
        </div>
      )}
    </TableContainer>
  );
};
